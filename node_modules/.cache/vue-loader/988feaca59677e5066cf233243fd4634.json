{"remainingRequest":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\pug-plain-loader\\index.js!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\components\\MainGame\\GameMain.vue?vue&type=template&id=7bdf25af&scoped=true&lang=pug&","dependencies":[{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\components\\MainGame\\GameMain.vue","mtime":1594748997453},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\pug-plain-loader\\index.js","mtime":1521946589000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfYygiaDEiLCBbX3ZtLl92KCJUZXh0IildKSwKICAgIE9iamVjdC5rZXlzKF92bS5uZXh0V29yZCkubGVuZ3RoICE9IDAKICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtY29udGFpbmVyIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtaGVhZGVyIiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC1oZWFkZXJfcmVwZWF0LXByb2dyZXNzIiB9KSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtaGVhZGVyX2RlbGV0ZS1idXR0b24iIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyAieC1zbWFsbCI6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5hZGRXb3JkSW5EZWxldGVDYXRlZ29yeSgpCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkZWxldGUtYnV0dG9uIiB9KV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygibWFpbiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLWJvZHkiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsZWFybi1jb250ZW50IiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsZWFybi1jb250ZW50X2ltYWdlLXdvcmQiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5zaG93SW1hZ2UKICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxlYXJuLWNvbnRlbnRfaW1hZ2UiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiAiIiArIHRoaXMudXJsRmlsZXMgKyB0aGlzLm5leHRXb3JkLmltYWdlLAogICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMjUwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIxNzAiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGVhcm4tY29udGVudF93b3JkIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJmb3JtIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIndvcmRfb3JpZ2luIiwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCkKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNoZWNrV29yZCgpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJvcmlnaW5fY29udGFpbmVyIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLm5leHRXb3JkLndvcmQsIGZ1bmN0aW9uKHN5bWJvbCwgaSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzcGFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGhpZGRlbjogX3ZtLmlzSGlkZVdvcmQgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uY2xhc3NGb3JTeW1ib2xzW2ldCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhzeW1ib2wpKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBuYW1lOiAiZm9jdXMiLCByYXdOYW1lOiAidi1mb2N1cyIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS51c2VySW5wdXQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAidXNlcklucHV0IgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IFt7IGhpZGRlbjogIV92bS5pc0hpZGVXb3JkIH0sICJvcmlnaW5faW5wdXQiXSwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0udXNlcklucHV0IH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnVzZXJJbnB1dCA9ICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJzcGFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGhpZGRlbjogX3ZtLmlzSGlkZUZhZGVBbnN3ZXIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJvcmlnaW5fZmFkZS1hbnN3ZXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhfdm0ubmV4dFdvcmQud29yZCkpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX3ZtLnNob3dXb3JkVHJhbnNsYXRlCiAgICAgICAgICAgICAgICAgICAgPyBfYygicCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ3b3JkX3RyYW5zbGF0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBpbm5lckhUTUw6IF92bS5fcyhfdm0ubmV4dFdvcmQud29yZFRyYW5zbGF0ZSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICBfdm0uc2hvd1RyYW5zY3JpcHRpb24gJiYgIV92bS5pc0hpZGVTZW50ZW5jZXMKICAgICAgICAgICAgICAgICAgICA/IF9jKCJwIiwgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIndvcmRfdHJhbnNjcmlwdGlvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaW5uZXJIVE1MOiBfdm0uX3MoX3ZtLm5leHRXb3JkLnRyYW5zY3JpcHRpb24pCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uc2hvd1RleHRFeGFtcGxlCiAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGVhcm4tY29udGVudF90ZXh0LWV4YW1wbGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRleHQtZXhhbXBsZV9vcmlnaW4iIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogIm9yaWdpbl9hbGwtc2VudGVuY2UiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgaW5uZXJIVE1MOiBfdm0uX3MoX3ZtLmV4YW1wbGUuYmVmb3JlKSB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNIaWRlU2VudGVuY2VzCiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJvcmlnaW5fY2FwIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiWy4uLl0iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICA6IF9jKCJzcGFuIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm9yaWdpbl93b3JkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbm5lckhUTUw6IF92bS5fcyhfdm0uZXhhbXBsZS53b3JkSW5UZXh0KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgaW5uZXJIVE1MOiBfdm0uX3MoX3ZtLmV4YW1wbGUuYWZ0ZXIpIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX3ZtLnNob3dUZXh0RXhhbXBsZVRyYW5zbGF0ZQogICAgICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRleHQtZXhhbXBsZV90cmFuc2xhdGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAhX3ZtLmlzSGlkZVNlbnRlbmNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygicCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInRyYW5zbGF0ZV9hbGwtc2VudGVuY2UiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbm5lckhUTUw6IF92bS5fcygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLm5leHRXb3JkLnRleHRFeGFtcGxlVHJhbnNsYXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICBfdm0uc2hvd1RleHRNZWFuaW5nCiAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGVhcm4tY29udGVudF90ZXh0LW1lYW5pbmciIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRleHQtbWVhbmluZ19vcmlnaW4iIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogIm9yaWdpbl9hbGwtc2VudGVuY2UiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgaW5uZXJIVE1MOiBfdm0uX3MoX3ZtLm1lYW5pbmcuYmVmb3JlKSB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNIaWRlU2VudGVuY2VzCiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJvcmlnaW5fY2FwIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiWy4uLl0iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICA6IF9jKCJzcGFuIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm9yaWdpbl93b3JkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbm5lckhUTUw6IF92bS5fcyhfdm0ubWVhbmluZy53b3JkSW5UZXh0KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgaW5uZXJIVE1MOiBfdm0uX3MoX3ZtLm1lYW5pbmcuYWZ0ZXIpIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX3ZtLnNob3dUZXh0TWVhbmluZ1RyYW5zbGF0ZQogICAgICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRleHQtbWVhbmluZ190cmFuc2xhdGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAhX3ZtLmlzSGlkZVNlbnRlbmNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygicCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInRyYW5zbGF0ZV9hbGwtc2VudGVuY2UiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbm5lckhUTUw6IF92bS5fcygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLm5leHRXb3JkLnRleHRNZWFuaW5nVHJhbnNsYXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLWZvb3RlciIgfSwKICAgICAgICAgICAgW19jKCJ2LXByb2dyZXNzLWxpbmVhciIsIHsgYXR0cnM6IHsgdmFsdWU6IF92bS5wcm9ncmVzc0xpbmVhciB9IH0pXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIDogX3ZtLl9lKCkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}