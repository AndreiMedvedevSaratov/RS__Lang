{"remainingRequest":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\components\\statGraph.vue?vue&type=style&index=0&id=d939ab0c&lang=scss&scoped=true&","dependencies":[{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\components\\statGraph.vue","mtime":1595008878921},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLy8gI2dyYXBoIHsNCi8vIAl3aWR0aDogNTAwcHg7DQovLyAJaGVpZ2h0OiAzMDBweDsNCi8vIH0NCg0KLy8gQG1lZGlhIChtYXgtd2lkdGg6IDE0NDBweCkgew0KLy8gCSNncmFwaCB7DQovLyAJCXdpZHRoOiA1MDBweDsNCi8vIAkJaGVpZ2h0OiAzMDBweDsNCi8vIAl9DQovLyB9DQovLyBAbWVkaWEgKG1heC13aWR0aDogMTAyMHB4KSB7DQovLyAJI2dyYXBoIHsNCi8vIAkJd2lkdGg6IDc4MHB4Ow0KLy8gCX0NCi8vIH0NCi8vIEBtZWRpYSAobWF4LXdpZHRoOiA3ODBweCkgew0KLy8gCSNncmFwaCB7DQovLyAJCXdpZHRoOiAzMjBweDsNCi8vIAl9DQovLyB9DQovLyBAbWVkaWEgKG1heC13aWR0aDogMzIwcHgpIHsNCi8vIAkjZ3JhcGggew0KLy8gCQl3aWR0aDogMzAwcHg7DQovLyAJfQ0KLy8gfQ0K"},{"version":3,"sources":["statGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"statGraph.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\r\n\tcanvas(\r\n\t\tid='graph'\r\n\t\twidth=\"500\"\r\n\t\theight=\"300\"\r\n\t)\r\n</template>\r\n\r\n<script>\r\n// :width=\"graphWidth\"\r\n// :height=\"graphHeight\"\r\nexport default {\r\n\tname: 'StatGraph',\r\n\tcomponents: {},\r\n\tdirectives: {},\r\n\tmixins: [],\r\n\tprops: {\r\n\t\tstatistics: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tgraphWidth: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 500,\r\n\t\t},\r\n\t\tgraphHeight: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 300,\r\n\t\t},\r\n\t},\r\n\tdata: () => ({}),\r\n\tcomputed: {},\r\n\twatch: {},\r\n\tcreated() {},\r\n\tmounted() {\r\n\t\tthis.createGraph(this.statistics);\r\n\t},\r\n\tbeforeUpdate() {\r\n\t\tthis.createGraph(this.statistics);\r\n\t},\r\n\tupdated() {},\r\n\tmethods: {\r\n\t\tcreateGraph(statData) {\r\n\t\t\tconst xPadding = 30;\r\n\t\t\tconst yPadding = 30;\r\n\t\t\tconst graph = document.getElementById('graph');\r\n\r\n\t\t\t// Returns the max words value in our data list\r\n\t\t\tfunction getMaxWords(arr) {\r\n\t\t\t\tlet max = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < arr.length; i += 1) {\r\n\t\t\t\t\tif (arr[i].words > max) {\r\n\t\t\t\t\t\tmax = arr[i].words;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmax += 10 - (max % 10);\r\n\t\t\t\treturn max;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getLastWeek(arr) {\r\n\t\t\t\treturn arr.slice(-7);\r\n\t\t\t\t// const today = new Date().toJSON().replace(/T.+/, '');\r\n\t\t\t\t// console.log(today);\r\n\t\t\t}\r\n\r\n\t\t\t// Return the x pixel for a graph point\r\n\t\t\tfunction getXPixel(arr, val) {\r\n\t\t\t\treturn ((graph.width - xPadding) / arr.length) * val + xPadding * 1.25;\r\n\t\t\t}\r\n\r\n\t\t\t// Return the y pixel for a graph point\r\n\t\t\tfunction getYPixel(arr, val) {\r\n\t\t\t\treturn graph.height - ((graph.height - yPadding) / getMaxWords(arr)) * val - yPadding;\r\n\t\t\t}\r\n\r\n\t\t\tconst c = graph.getContext('2d');\r\n\t\t\tconst data = getLastWeek(statData);\r\n\r\n\t\t\t// basic params\r\n\t\t\tc.lineWidth = 2;\r\n\t\t\tc.strokeStyle = '#333';\r\n\t\t\tc.font = 'italic 8pt sans-serif';\r\n\t\t\tc.textAlign = 'center';\r\n\r\n\t\t\t// Draw the axises\r\n\t\t\tc.beginPath();\r\n\t\t\tc.moveTo(xPadding, 0);\r\n\t\t\tc.lineTo(xPadding, graph.height - yPadding);\r\n\t\t\tc.lineTo(graph.width, graph.height - yPadding);\r\n\t\t\tc.stroke();\r\n\r\n\t\t\t// Draw the X value texts\r\n\t\t\tfor (let i = 0; i < data.length; i += 1) {\r\n\t\t\t\t// uses data.X\r\n\t\t\t\tc.fillText(data[i].date.slice(-2), getXPixel(data, i), graph.height - yPadding + 20);\r\n\t\t\t}\r\n\r\n\t\t\t// Draw the Y value texts\r\n\t\t\tc.textAlign = 'right';\r\n\t\t\tc.textBaseline = 'middle';\r\n\r\n\t\t\tfor (let i = 0; i < getMaxWords(data); i += 10) {\r\n\t\t\t\tc.fillText(i, xPadding - 10, getYPixel(data, i));\r\n\t\t\t}\r\n\t\t\tc.strokeStyle = '#f00';\r\n\r\n\t\t\t// eslint-disable-next-line no-use-before-define\r\n\t\t\tdrawLine('words', '#f00');\r\n\t\t\t// eslint-disable-next-line no-use-before-define\r\n\t\t\tdrawLine('successWord', '#00ffffff');\r\n\t\t\tfunction drawLine(field, color) {\r\n\t\t\t\t// Draw the line graph\r\n\t\t\t\tc.beginPath();\r\n\t\t\t\tc.strokeStyle = color;\r\n\t\t\t\tc.moveTo(getXPixel(data, 0), getYPixel(data, data[0][field]));\r\n\t\t\t\tfor (let i = 1; i < data.length; i += 1) {\r\n\t\t\t\t\tc.lineTo(getXPixel(data, i), getYPixel(data, data[i][field]));\r\n\t\t\t\t}\r\n\t\t\t\tc.stroke();\r\n\r\n\t\t\t\t// Draw the dots\r\n\t\t\t\tc.fillStyle = '#333';\r\n\r\n\t\t\t\tfor (let i = 0; i < data.length; i += 1) {\r\n\t\t\t\t\tc.beginPath();\r\n\t\t\t\t\tc.arc(getXPixel(data, i), getYPixel(data, data[i][field]), 4, 0, Math.PI * 2, true);\r\n\t\t\t\t\tc.fill();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// #graph {\r\n// \twidth: 500px;\r\n// \theight: 300px;\r\n// }\r\n\r\n// @media (max-width: 1440px) {\r\n// \t#graph {\r\n// \t\twidth: 500px;\r\n// \t\theight: 300px;\r\n// \t}\r\n// }\r\n// @media (max-width: 1020px) {\r\n// \t#graph {\r\n// \t\twidth: 780px;\r\n// \t}\r\n// }\r\n// @media (max-width: 780px) {\r\n// \t#graph {\r\n// \t\twidth: 320px;\r\n// \t}\r\n// }\r\n// @media (max-width: 320px) {\r\n// \t#graph {\r\n// \t\twidth: 300px;\r\n// \t}\r\n// }\r\n</style>\r\n"]}]}