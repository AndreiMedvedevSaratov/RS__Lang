{"remainingRequest":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\babel-loader\\lib\\index.js!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\components\\statGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\components\\statGraph.vue","mtime":1594841774587},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gOndpZHRoPSJncmFwaFdpZHRoIgovLyA6aGVpZ2h0PSJncmFwaEhlaWdodCIKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTdGF0R3JhcGgnLAogIGNvbXBvbmVudHM6IHt9LAogIGRpcmVjdGl2ZXM6IHt9LAogIG1peGluczogW10sCiAgcHJvcHM6IHsKICAgIHN0YXRpc3RpY3M6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgZ3JhcGhXaWR0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDUwMAogICAgfSwKICAgIGdyYXBoSGVpZ2h0OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMzAwCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIHdhdGNoOiB7fSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuY3JlYXRlR3JhcGgodGhpcy5zdGF0aXN0aWNzKTsKICB9LAogIGJlZm9yZVVwZGF0ZTogZnVuY3Rpb24gYmVmb3JlVXBkYXRlKCkgewogICAgdGhpcy5jcmVhdGVHcmFwaCh0aGlzLnN0YXRpc3RpY3MpOwogIH0sCiAgdXBkYXRlZDogZnVuY3Rpb24gdXBkYXRlZCgpIHt9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZUdyYXBoOiBmdW5jdGlvbiBjcmVhdGVHcmFwaChzdGF0RGF0YSkgewogICAgICB2YXIgeFBhZGRpbmcgPSAzMDsKICAgICAgdmFyIHlQYWRkaW5nID0gMzA7CiAgICAgIHZhciBncmFwaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdncmFwaCcpOyAvLyBSZXR1cm5zIHRoZSBtYXggd29yZHMgdmFsdWUgaW4gb3VyIGRhdGEgbGlzdAoKICAgICAgZnVuY3Rpb24gZ2V0TWF4V29yZHMoYXJyKSB7CiAgICAgICAgdmFyIG1heCA9IDA7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgICBpZiAoYXJyW2ldLndvcmRzID4gbWF4KSB7CiAgICAgICAgICAgIG1heCA9IGFycltpXS53b3JkczsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIG1heCArPSAxMCAtIG1heCAlIDEwOwogICAgICAgIHJldHVybiBtYXg7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGdldExhc3RXZWVrKGFycikgewogICAgICAgIHJldHVybiBhcnIuc2xpY2UoLTcpOyAvLyBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCkudG9KU09OKCkucmVwbGFjZSgvVC4rLywgJycpOwogICAgICAgIC8vIGNvbnNvbGUubG9nKHRvZGF5KTsKICAgICAgfSAvLyBSZXR1cm4gdGhlIHggcGl4ZWwgZm9yIGEgZ3JhcGggcG9pbnQKCgogICAgICBmdW5jdGlvbiBnZXRYUGl4ZWwoYXJyLCB2YWwpIHsKICAgICAgICByZXR1cm4gKGdyYXBoLndpZHRoIC0geFBhZGRpbmcpIC8gYXJyLmxlbmd0aCAqIHZhbCArIHhQYWRkaW5nICogMS4yNTsKICAgICAgfSAvLyBSZXR1cm4gdGhlIHkgcGl4ZWwgZm9yIGEgZ3JhcGggcG9pbnQKCgogICAgICBmdW5jdGlvbiBnZXRZUGl4ZWwoYXJyLCB2YWwpIHsKICAgICAgICByZXR1cm4gZ3JhcGguaGVpZ2h0IC0gKGdyYXBoLmhlaWdodCAtIHlQYWRkaW5nKSAvIGdldE1heFdvcmRzKGFycikgKiB2YWwgLSB5UGFkZGluZzsKICAgICAgfQoKICAgICAgdmFyIGMgPSBncmFwaC5nZXRDb250ZXh0KCcyZCcpOwogICAgICB2YXIgZGF0YSA9IGdldExhc3RXZWVrKHN0YXREYXRhKTsgLy8gYmFzaWMgcGFyYW1zCgogICAgICBjLmxpbmVXaWR0aCA9IDI7CiAgICAgIGMuc3Ryb2tlU3R5bGUgPSAnIzMzMyc7CiAgICAgIGMuZm9udCA9ICdpdGFsaWMgOHB0IHNhbnMtc2VyaWYnOwogICAgICBjLnRleHRBbGlnbiA9ICdjZW50ZXInOyAvLyBEcmF3IHRoZSBheGlzZXMKCiAgICAgIGMuYmVnaW5QYXRoKCk7CiAgICAgIGMubW92ZVRvKHhQYWRkaW5nLCAwKTsKICAgICAgYy5saW5lVG8oeFBhZGRpbmcsIGdyYXBoLmhlaWdodCAtIHlQYWRkaW5nKTsKICAgICAgYy5saW5lVG8oZ3JhcGgud2lkdGgsIGdyYXBoLmhlaWdodCAtIHlQYWRkaW5nKTsKICAgICAgYy5zdHJva2UoKTsgLy8gRHJhdyB0aGUgWCB2YWx1ZSB0ZXh0cwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgLy8gdXNlcyBkYXRhLlgKICAgICAgICBjLmZpbGxUZXh0KGRhdGFbaV0uZGF0ZS5zbGljZSgtMiksIGdldFhQaXhlbChkYXRhLCBpKSwgZ3JhcGguaGVpZ2h0IC0geVBhZGRpbmcgKyAyMCk7CiAgICAgIH0gLy8gRHJhdyB0aGUgWSB2YWx1ZSB0ZXh0cwoKCiAgICAgIGMudGV4dEFsaWduID0gJ3JpZ2h0JzsKICAgICAgYy50ZXh0QmFzZWxpbmUgPSAnbWlkZGxlJzsKCiAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBnZXRNYXhXb3JkcyhkYXRhKTsgX2kgKz0gMTApIHsKICAgICAgICBjLmZpbGxUZXh0KF9pLCB4UGFkZGluZyAtIDEwLCBnZXRZUGl4ZWwoZGF0YSwgX2kpKTsKICAgICAgfQoKICAgICAgYy5zdHJva2VTdHlsZSA9ICcjZjAwJzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZS1iZWZvcmUtZGVmaW5lCgogICAgICBkcmF3TGluZSgnd29yZHMnLCAnI2YwMCcpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlLWJlZm9yZS1kZWZpbmUKCiAgICAgIGRyYXdMaW5lKCdzdWNjZXNzV29yZCcsICcjMDBmZmZmZmYnKTsKCiAgICAgIGZ1bmN0aW9uIGRyYXdMaW5lKGZpZWxkLCBjb2xvcikgewogICAgICAgIC8vIERyYXcgdGhlIGxpbmUgZ3JhcGgKICAgICAgICBjLmJlZ2luUGF0aCgpOwogICAgICAgIGMuc3Ryb2tlU3R5bGUgPSBjb2xvcjsKICAgICAgICBjLm1vdmVUbyhnZXRYUGl4ZWwoZGF0YSwgMCksIGdldFlQaXhlbChkYXRhLCBkYXRhWzBdW2ZpZWxkXSkpOwoKICAgICAgICBmb3IgKHZhciBfaTIgPSAxOyBfaTIgPCBkYXRhLmxlbmd0aDsgX2kyICs9IDEpIHsKICAgICAgICAgIGMubGluZVRvKGdldFhQaXhlbChkYXRhLCBfaTIpLCBnZXRZUGl4ZWwoZGF0YSwgZGF0YVtfaTJdW2ZpZWxkXSkpOwogICAgICAgIH0KCiAgICAgICAgYy5zdHJva2UoKTsgLy8gRHJhdyB0aGUgZG90cwoKICAgICAgICBjLmZpbGxTdHlsZSA9ICcjMzMzJzsKCiAgICAgICAgZm9yICh2YXIgX2kzID0gMDsgX2kzIDwgZGF0YS5sZW5ndGg7IF9pMyArPSAxKSB7CiAgICAgICAgICBjLmJlZ2luUGF0aCgpOwogICAgICAgICAgYy5hcmMoZ2V0WFBpeGVsKGRhdGEsIF9pMyksIGdldFlQaXhlbChkYXRhLCBkYXRhW19pM11bZmllbGRdKSwgNCwgMCwgTWF0aC5QSSAqIDIsIHRydWUpOwogICAgICAgICAgYy5maWxsKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["statGraph.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\r\n\tcanvas(\r\n\t\tid='graph'\r\n\t\twidth=\"500\"\r\n\t\theight=\"300\"\r\n\t)\r\n</template>\r\n\r\n<script>\r\n// :width=\"graphWidth\"\r\n// :height=\"graphHeight\"\r\nexport default {\r\n\tname: 'StatGraph',\r\n\tcomponents: {},\r\n\tdirectives: {},\r\n\tmixins: [],\r\n\tprops: {\r\n\t\tstatistics: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tgraphWidth: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 500,\r\n\t\t},\r\n\t\tgraphHeight: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 300,\r\n\t\t},\r\n\t},\r\n\tdata: () => ({}),\r\n\tcomputed: {},\r\n\twatch: {},\r\n\tcreated() {},\r\n\tmounted() {\r\n\t\tthis.createGraph(this.statistics);\r\n\t},\r\n\tbeforeUpdate() {\r\n\t\tthis.createGraph(this.statistics);\r\n\t},\r\n\tupdated() {},\r\n\tmethods: {\r\n\t\tcreateGraph(statData) {\r\n\t\t\tconst xPadding = 30;\r\n\t\t\tconst yPadding = 30;\r\n\t\t\tconst graph = document.getElementById('graph');\r\n\r\n\t\t\t// Returns the max words value in our data list\r\n\t\t\tfunction getMaxWords(arr) {\r\n\t\t\t\tlet max = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < arr.length; i += 1) {\r\n\t\t\t\t\tif (arr[i].words > max) {\r\n\t\t\t\t\t\tmax = arr[i].words;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmax += 10 - (max % 10);\r\n\t\t\t\treturn max;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getLastWeek(arr) {\r\n\t\t\t\treturn arr.slice(-7);\r\n\t\t\t\t// const today = new Date().toJSON().replace(/T.+/, '');\r\n\t\t\t\t// console.log(today);\r\n\t\t\t}\r\n\r\n\t\t\t// Return the x pixel for a graph point\r\n\t\t\tfunction getXPixel(arr, val) {\r\n\t\t\t\treturn ((graph.width - xPadding) / arr.length) * val + xPadding * 1.25;\r\n\t\t\t}\r\n\r\n\t\t\t// Return the y pixel for a graph point\r\n\t\t\tfunction getYPixel(arr, val) {\r\n\t\t\t\treturn graph.height - ((graph.height - yPadding) / getMaxWords(arr)) * val - yPadding;\r\n\t\t\t}\r\n\r\n\t\t\tconst c = graph.getContext('2d');\r\n\t\t\tconst data = getLastWeek(statData);\r\n\r\n\t\t\t// basic params\r\n\t\t\tc.lineWidth = 2;\r\n\t\t\tc.strokeStyle = '#333';\r\n\t\t\tc.font = 'italic 8pt sans-serif';\r\n\t\t\tc.textAlign = 'center';\r\n\r\n\t\t\t// Draw the axises\r\n\t\t\tc.beginPath();\r\n\t\t\tc.moveTo(xPadding, 0);\r\n\t\t\tc.lineTo(xPadding, graph.height - yPadding);\r\n\t\t\tc.lineTo(graph.width, graph.height - yPadding);\r\n\t\t\tc.stroke();\r\n\r\n\t\t\t// Draw the X value texts\r\n\t\t\tfor (let i = 0; i < data.length; i += 1) {\r\n\t\t\t\t// uses data.X\r\n\t\t\t\tc.fillText(data[i].date.slice(-2), getXPixel(data, i), graph.height - yPadding + 20);\r\n\t\t\t}\r\n\r\n\t\t\t// Draw the Y value texts\r\n\t\t\tc.textAlign = 'right';\r\n\t\t\tc.textBaseline = 'middle';\r\n\r\n\t\t\tfor (let i = 0; i < getMaxWords(data); i += 10) {\r\n\t\t\t\tc.fillText(i, xPadding - 10, getYPixel(data, i));\r\n\t\t\t}\r\n\t\t\tc.strokeStyle = '#f00';\r\n\r\n\t\t\t// eslint-disable-next-line no-use-before-define\r\n\t\t\tdrawLine('words', '#f00');\r\n\t\t\t// eslint-disable-next-line no-use-before-define\r\n\t\t\tdrawLine('successWord', '#00ffffff');\r\n\t\t\tfunction drawLine(field, color) {\r\n\t\t\t\t// Draw the line graph\r\n\t\t\t\tc.beginPath();\r\n\t\t\t\tc.strokeStyle = color;\r\n\t\t\t\tc.moveTo(getXPixel(data, 0), getYPixel(data, data[0][field]));\r\n\t\t\t\tfor (let i = 1; i < data.length; i += 1) {\r\n\t\t\t\t\tc.lineTo(getXPixel(data, i), getYPixel(data, data[i][field]));\r\n\t\t\t\t}\r\n\t\t\t\tc.stroke();\r\n\r\n\t\t\t\t// Draw the dots\r\n\t\t\t\tc.fillStyle = '#333';\r\n\r\n\t\t\t\tfor (let i = 0; i < data.length; i += 1) {\r\n\t\t\t\t\tc.beginPath();\r\n\t\t\t\t\tc.arc(getXPixel(data, i), getYPixel(data, data[i][field]), 4, 0, Math.PI * 2, true);\r\n\t\t\t\t\tc.fill();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// #graph {\r\n// \twidth: 500px;\r\n// \theight: 300px;\r\n// }\r\n\r\n// @media (max-width: 1440px) {\r\n// \t#graph {\r\n// \t\twidth: 500px;\r\n// \t\theight: 300px;\r\n// \t}\r\n// }\r\n// @media (max-width: 1020px) {\r\n// \t#graph {\r\n// \t\twidth: 780px;\r\n// \t}\r\n// }\r\n// @media (max-width: 780px) {\r\n// \t#graph {\r\n// \t\twidth: 320px;\r\n// \t}\r\n// }\r\n// @media (max-width: 320px) {\r\n// \t#graph {\r\n// \t\twidth: 300px;\r\n// \t}\r\n// }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}