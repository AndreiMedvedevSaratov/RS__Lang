{"remainingRequest":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\thread-loader\\dist\\cjs.js!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\babel-loader\\lib\\index.js!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\components\\GameSpeakit.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\components\\GameSpeakit.vue","mtime":1594581309204},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJGOi9SUy9SZXBvc2l0YXJpZXMvUlMtTGFuZy9yc2xhbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBBY3Rpb25zLCBtYXBHZXR0ZXJzLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JzsKLyoqDQogKiBBUEkgVnVlDQogKiBodHRwczovL3J1LnZ1ZWpzLm9yZy92Mi9hcGkvaW5kZXguaHRtbA0KICovCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NwZWFrSXQnLAogIGNvbXBvbmVudHM6IHt9LAogIHByb3BzOiBbXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RhdHVzOiAnJywKICAgICAgY291bnQ6IFtdLAogICAgICBnYW1lU3RhdHVzOiBmYWxzZSwKICAgICAgZ2FtZUxldmVsOiAwLAogICAgICByZWNvZ25pdGlvbjogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKHsKICAgIGlzV29yZHM6ICdnZXRXb3JkcycsCiAgICBpc1VybEZpbGVzOiAnZ2V0VXJsRmlsZXMnLAogICAgVXJsSW1hZ2U6ICdnZXRVcmxJbWFnZScKICB9KSksIHt9LCB7CiAgICBnZXRXb3Jkc0FycmF5OiBmdW5jdGlvbiBnZXRXb3Jkc0FycmF5KCkgewogICAgICByZXR1cm4gdGhpcy5pc1dvcmRzLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLndvcmQudG9Mb3dlckNhc2UoKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0SW1hZ2VBcnJheTogZnVuY3Rpb24gZ2V0SW1hZ2VBcnJheSgpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNXb3Jkcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5pbWFnZTsKICAgICAgfSk7CiAgICB9CiAgfSksCiAgd2F0Y2g6IHt9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLyoqIEV4YW1wbGVzDQogICAgICAgKiB0aGlzLmdldFdvcmRzKCk7IHBhZ2UgLSAwLCBncm91cCAtIDANCiAgICAgICAqIHRoaXMuZ2V0V29yZHMoeyBwYWdlOiAyIH0pOw0KICAgICAgICogdGhpcy5nZXRXb3Jkcyh7IHBhZ2U6IDIsIGdyb3VwOiAzIH0pOw0KICAgICAgICogdGhpcy5nZXRXb3Jkcyh7IGdyb3VwOiAzIH0pOw0KICAgICAgICovCiAgICB0aGlzLmdldFdvcmRzKHsKICAgICAgcGFnZTogMCwKICAgICAgZmlsdGVyOiB7CiAgICAgICAgJG9yOiBbewogICAgICAgICAgdXNlcldvcmQ6IHsKICAgICAgICAgICAgJG5lOiBudWxsCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgdXNlcldvcmQ6IG51bGwKICAgICAgICB9XQogICAgICB9CiAgICB9KTsKICAgIHRoaXMuYXBwSHRtbChbLy8g0YHQstC10YDQvdC10Lwg0LzQtdC90Y4KICAgIHsKICAgICAgb25lOiAnbWFpbicsCiAgICAgIGtleTogJ2RyYXdlcicsCiAgICAgIHZhbHVlOiBmYWxzZQogICAgfSwgLy8g0KPQsdC10YDQtdC8INGF0LvQtdCx0L3Ri9C1INC60YDQvtGI0LrQuAogICAgewogICAgICBvbmU6ICdtYWluJywKICAgICAga2V5OiAnYnJlYWRjcnVtYnMnLAogICAgICB2YWx1ZTogZmFsc2UKICAgIH0sIC8vINCY0LfQvNC10L3QuNC8INGG0LLQtdGCIGhlYWRlciDQv9C+INGC0LDQsdC70LjRhtC1INGG0LLQtdGC0L7QsgogICAgLy8gaHR0cHM6Ly92dWV0aWZ5anMuY29tL2VuL3N0eWxlcy9jb2xvcnMvI3Nhc3MtY29sb3ItcGFjawogICAgewogICAgICBvbmU6ICdtYWluJywKICAgICAga2V5OiAnYmFja2dyb3VuZCcsCiAgICAgIHZhbHVlOiAncHVycGxlIGxpZ2h0ZW4tNScKICAgIH0sIHsKICAgICAgb25lOiAnYXBwJywKICAgICAga2V5OiAnYmFja2dyb3VuZCcsCiAgICAgIHZhbHVlOiAncHVycGxlIGxpZ2h0ZW4tNScKICAgIH1dKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICAvLyDQn9C10YDQtdC0INC30LDQutGA0YvRgtC40LXQvCDRgdGC0YDQsNC90LjRhtGLINCy0L7Qt9GA0LDRidCw0LXQvCDQvdCw0YHRgtGA0L7QudC60Lgg0L7QsdGA0LDRgtC90L4KICAgIHRoaXMuYXBwSHRtbChbewogICAgICBvbmU6ICdtYWluJywKICAgICAga2V5OiAnZHJhd2VyJywKICAgICAgdmFsdWU6IHRydWUKICAgIH0sIHsKICAgICAgb25lOiAnbWFpbicsCiAgICAgIGtleTogJ2JyZWFkY3J1bWJzJywKICAgICAgdmFsdWU6IHRydWUKICAgIH0sIHsKICAgICAgb25lOiAnbWFpbicsCiAgICAgIGtleTogJ2JhY2tncm91bmQnLAogICAgICB2YWx1ZTogJycKICAgIH0sIHsKICAgICAgb25lOiAnYXBwJywKICAgICAga2V5OiAnYmFja2dyb3VuZCcsCiAgICAgIHZhbHVlOiAnZ3JleSBsaWdodGVuLTUnCiAgICB9XSk7CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwTXV0YXRpb25zKHsKICAgIGFwcEh0bWw6ICdFRElUX0hUTUwnCiAgfSkpLCBtYXBBY3Rpb25zKHsKICAgIGdldFdvcmRzOiAnQVBQX0dFVF9VU0VSX1dPUkRTX0FHR1JFR0FURUQnLAogICAgYWxlcnQ6ICdBTEVSVCcsCiAgICB3b3JkUHJvY2Vzc2luZzogJ0FQUF9XT1JEX1BST0NFU1NJTkcnCiAgfSkpLCB7fSwgewogICAgZ2FtZUFjdGlvbjogZnVuY3Rpb24gZ2FtZUFjdGlvbihkYXRhKSB7CiAgICAgIGlmICghdGhpcy5nYW1lU3RhdHVzKSB0aGlzLnNldEltZ0FuZEF1ZGlvKHsKICAgICAgICBpbWFnZTogZGF0YS5pbWFnZSwKICAgICAgICBhdWRpbzogZGF0YS5hdWRpbwogICAgICB9KTsKICAgIH0sCiAgICBzcGVhazogZnVuY3Rpb24gc3BlYWsoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmdhbWVTdGF0dXMgPSB0cnVlOwogICAgICB2YXIgU3BlZWNoUmVjb2duaXRpb24gPSB3aW5kb3cuU3BlZWNoUmVjb2duaXRpb24gfHwgd2luZG93LndlYmtpdFNwZWVjaFJlY29nbml0aW9uOwogICAgICB0aGlzLnJlY29nbml0aW9uID0gbmV3IFNwZWVjaFJlY29nbml0aW9uKCk7CiAgICAgIHRoaXMucmVjb2duaXRpb24ubGFuZyA9ICdlbi1VUyc7CiAgICAgIHRoaXMucmVjb2duaXRpb24uY29udGludW9zID0gZmFsc2U7CiAgICAgIHRoaXMucmVjb2duaXRpb24uaW50ZXJpbVJlc3VsdHMgPSBmYWxzZTsKICAgICAgdGhpcy5yZWNvZ25pdGlvbi5tYXhBbHRlcm5hdGl2ZXMgPSAxOwoKICAgICAgdGhpcy5yZWNvZ25pdGlvbi5vbmVycm9yID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgY29uc29sZS5sb2coIkl0J3MgZXJyb3IhICIuY29uY2F0KGV2ZW50LmVycm9yKSk7CiAgICAgIH07CgogICAgICB0aGlzLnJlY29nbml0aW9uLm9uZW5kID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpcy5yZWNvZ25pdGlvbi5zdGFydCgpOwogICAgICB9OwoKICAgICAgdGhpcy5yZWNvZ25pdGlvbi5hZGRFdmVudExpc3RlbmVyKCdyZXN1bHQnLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICB2YXIgbGFzdCA9IGV2ZW50LnJlc3VsdHMubGVuZ3RoIC0gMTsKICAgICAgICB2YXIgc2F5V29yZCA9IGV2ZW50LnJlc3VsdHNbbGFzdF1bMF0udHJhbnNjcmlwdC50b0xvd2VyQ2FzZSgpOwogICAgICAgIHZhciBwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNwZWVjaCcpOwogICAgICAgIHAudGV4dENvbnRlbnQgPSBzYXlXb3JkOwoKICAgICAgICBpZiAoX3RoaXMuZ2V0V29yZHNBcnJheS5pbmNsdWRlcyhzYXlXb3JkKSkgewogICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW5fX2ltYWdlJykuc3JjID0gIiIuY29uY2F0KF90aGlzLmlzVXJsRmlsZXMpLmNvbmNhdChfdGhpcy5nZXRJbWFnZUFycmF5W190aGlzLmdldFdvcmRzQXJyYXkuaW5kZXhPZihzYXlXb3JkKV0pOwogICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc2F5V29yZCkuc3R5bGUub3BhY2l0eSA9ICcwLjUnOwoKICAgICAgICAgIGlmICghX3RoaXMuY291bnQuaW5jbHVkZXMoc2F5V29yZCkpIHsKICAgICAgICAgICAgX3RoaXMuY291bnQucHVzaChzYXlXb3JkKTsKCiAgICAgICAgICAgIHZhciBnZXRDb3JyZWN0V29yZCA9IF90aGlzLmdldFdvcmRzQXJyYXkuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgIHJldHVybiBpdGVtLndvcmQgPT09IHNheVdvcmQ7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgaWYgKGdldENvcnJlY3RXb3JkICE9PSB1bmRlZmluZWQpIF90aGlzLndvcmRQcm9jZXNzaW5nKHsKICAgICAgICAgICAgICB3b3JkOiBnZXRDb3JyZWN0V29yZCwKICAgICAgICAgICAgICByaWdodDogdHJ1ZSwKICAgICAgICAgICAgICBvZmZEYXRlOiB0cnVlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChfdGhpcy5jb3VudC5sZW5ndGggPT09IDIwKSB7CiAgICAgICAgICAgIHZhciBjYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXJkJyk7CgogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNhcmRzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgICAgICAgY2FyZHNbaV0uc3R5bGUub3BhY2l0eSA9ICcnOwogICAgICAgICAgICB9IC8vIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXJkJykuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgICAgICAvLyAJLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduCiAgICAgICAgICAgIC8vIAlpdGVtLnN0eWxlLm9wYWNpdHkgPSAnMSc7CiAgICAgICAgICAgIC8vIAlyZXR1cm4gaXRlbTsKICAgICAgICAgICAgLy8gfSk7CgoKICAgICAgICAgICAgX3RoaXMuYWxlcnQoewogICAgICAgICAgICAgIGRhdGE6ICdZb3VyZSB3aW4sIGdvb2Qgam9iISBZb3VyIHNraWxsIGlzIHByZXR0eSBoaWdoJwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIF90aGlzLmdhbWVMZXZlbCArPSAxOwoKICAgICAgICAgICAgX3RoaXMuZ2V0V29yZHMoewogICAgICAgICAgICAgIHBhZ2U6IF90aGlzLmdhbWVMZXZlbCwKICAgICAgICAgICAgICBmaWx0ZXI6IHsKICAgICAgICAgICAgICAgICRvcjogW3sKICAgICAgICAgICAgICAgICAgdXNlcldvcmQ6IHsKICAgICAgICAgICAgICAgICAgICAkbmU6IG51bGwKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICB1c2VyV29yZDogbnVsbAogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgX3RoaXMucmVjb2duaXRpb24ub25lbmQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnJlY29nbml0aW9uLnN0b3AoKTsKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIF90aGlzLmNvdW50Lmxlbmd0aCA9IDA7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5yZWNvZ25pdGlvbi5zdGFydCgpOwogICAgfSwKICAgIHN0b3Bfc3BlYWs6IGZ1bmN0aW9uIHN0b3Bfc3BlYWsoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5nYW1lU3RhdHVzID0gZmFsc2U7CgogICAgICB0aGlzLnJlY29nbml0aW9uLm9uZW5kID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczIucmVjb2duaXRpb24uc3RvcCgpOwogICAgICB9OwoKICAgICAgdGhpcy5jb3VudC5sZW5ndGggPSAwOwogICAgfSwKICAgIHNldEltZ0FuZEF1ZGlvOiBmdW5jdGlvbiBzZXRJbWdBbmRBdWRpbyhwYXlsb2FkKSB7CiAgICAgIHRoaXMuVXJsSW1hZ2UgPSBwYXlsb2FkLmltYWdlOwogICAgICB2YXIgYXVkaW8gPSBuZXcgQXVkaW8ocGF5bG9hZC5hdWRpbyk7CiAgICAgIGF1ZGlvLnBsYXkoKTsKICAgIH0KICB9KQp9Ow=="},null]}