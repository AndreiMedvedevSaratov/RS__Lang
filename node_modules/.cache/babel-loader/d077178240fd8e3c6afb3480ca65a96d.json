{"remainingRequest":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\babel-loader\\lib\\index.js!F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\eslint-loader\\index.js??ref--12-0!F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\store\\app.js","dependencies":[{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\src\\store\\app.js","mtime":1594837992292},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\RS\\Repositaries\\RS-Lang\\rslang\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/RS/Repositaries/RS-Lang/rslang/src/store/app.js"],"names":["Vue","axios","actions","ALERT","state","payload","status","position","text","data","count","error","errors","forEach","element","message","$toast","open","type","duration","APP_GET_WORDS","rootState","commit","dispatch","words","page","group","wordsPerExampleSentenceLTE","wordsPerPage","hasOwnProperty","get","app","server","catch","alert","response","statusText","wordsData","console","log","APP_GET_COUNT_WORDS_IN_GROUP","then","APP_GET_WORD","wordId","noAssets","APP_SET_USER_WORD_STAT","method","user","profile","userId","wordStat","wordData","APP_GET_USER_WORD_STAT","APP_DELETE_USER_WORD_STAT","delete","res","APP_GET_USER_WORDS_AGGREGATED","filter","JSON","stringify","paginatedResults","length","totalCount","APP_GET_USER_WORD_AGGREGATED","word","APP_WORD_PROCESSING","right","offDate","wordHasStat","_id","mutations","EDIT_HTML","item","html","one","key","value","APP_GET_WORDS_COUNT","countWords","push","wordsStat","ind","indexOf","splice","APP_STATUS","APP_SHOW_SETTING","showSetting","SHOW_SHORT_STATISTICS","showShortStatistics","SHOW_ALERT","showAlert","STATISTIC_WORD","userWord","optional","difficulty","name","learnGroup","isDelete","allRepeats","successRepeats","previousTrain","Date","nextTrain","RIGHT_CHOICE_WORD","minLearnLevel","maxLearnLevel","NEXT_TRAIN_TIME","breakInDays","formDate","dateD","toJSON","replace","date","setDate","getDate","getters","getHtmlParameters","getWords","getCountWords","getWordsStat","getStatusLoadWithIcon","loading","icon","getServerUrl","getUrlFiles","urlFiles","getUrlImage","urlImage","main","drawer","background","breadcrumbs","colorWhite","namespaced"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-prototype-builtins */\r\nimport Vue from 'vue';\r\nimport axios from 'axios';\r\n\r\n/** Instructions for working with actions\r\n * link https://vuex.vuejs.org/api/#actions\r\n */\r\nconst actions = {\r\n\t/**\r\n\t * Notification function\r\n\t *\r\n\t * @param {object} payload\r\n\t * @param {string} [payload.status='default'] - error, warning, info, default\r\n\t * @param {(object|string)} payload.data\r\n\t * @param {string} [payload.message]\r\n\t * @example dispatch('ALERT', { status: error, data: {Object} || text }, { root: true })\r\n\t */\r\n\tALERT(state, payload) {\r\n\t\tconst status = payload.status ? payload.status : 'default';\r\n\t\tlet position = 'bottom-right';\r\n\t\tlet text = '';\r\n\r\n\t\tswitch (status) {\r\n\t\tcase 'error':\r\n\t\t\tif (typeof payload.data === 'object') {\r\n\t\t\t\tlet count = 1;\r\n\t\t\t\tpayload.data.error.errors.forEach((element) => {\r\n\t\t\t\t\t// eslint-disable-next-line no-plusplus\r\n\t\t\t\t\ttext += `${count++}) ${element.message} </br>`;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (typeof payload.data === 'string' || payload.message) text = payload.data || payload.message;\r\n\t\t\tbreak;\r\n\t\tcase 'warning':\r\n\t\t\ttext = payload.data;\r\n\t\t\tposition = 'bottom';\r\n\t\t\tbreak;\r\n\t\tcase 'info':\r\n\t\t\ttext = payload.data;\r\n\t\t\tposition = 'top-right';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\ttext = payload.data;\r\n\t\t\tposition = 'top';\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tVue.$toast.open({\r\n\t\t\tmessage: text,\r\n\t\t\ttype: status,\r\n\t\t\tduration: 10000,\r\n\t\t\tposition,\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Function gets words\r\n\t *\r\n\t * @param {object} [payload]\r\n\t * @param {number} [payload.page=0]\r\n\t * @param {number} [payload.group=0]\r\n\t * @param {number} [payload.wordsPerExampleSentenceLTE]\r\n\t * @param {number} [payload.wordsPerPage]\r\n\t * @example dispatch('APP_GET_WORDS', { page: 1, group: 1 }, { root: true })\r\n\t */\r\n\tasync APP_GET_WORDS({\r\n\t\trootState, commit, dispatch,\r\n\t}, payload) {\r\n\t\tconst words = {\r\n\t\t\tpage: 0,\r\n\t\t\tgroup: 0,\r\n\t\t\twordsPerExampleSentenceLTE: '',\r\n\t\t\twordsPerPage: '',\r\n\t\t};\r\n\t\tif (payload && payload.hasOwnProperty('page')) words.page = payload.page;\r\n\t\tif (payload && payload.hasOwnProperty('group')) words.group = payload.group;\r\n\t\tif (payload && payload.hasOwnProperty('wordsPerExampleSentenceLTE')) words.wordsPerExampleSentenceLTE = payload.wordsPerExampleSentenceLTE;\r\n\t\tif (payload && payload.hasOwnProperty('wordsPerExampleSentenceLTE') && payload.hasOwnProperty('wordsPerPage')) words.wordsPerPage = payload.wordsPerPage;\r\n\r\n\t\tcommit('APP_STATUS', 'loading');\r\n\r\n\t\tconst wordsData = await axios.get(\r\n\t\t\t`${rootState.app.server}/words?page=${words.page}&group=${words.group}&wordsPerExampleSentenceLTE=${words.wordsPerExampleSentenceLTE}&wordsPerPage=${words.wordsPerPage}`,\r\n\t\t)\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tcommit('APP_STATUS', 'error');\r\n\t\t\t\tdispatch('ALERT', {\r\n\t\t\t\t\talert: true,\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tmessage: `${error.response.statusText}: ${error.response.data}`,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\tif (wordsData) {\r\n\t\t\tconsole.log('APP_GET_WORDS', wordsData.data);\r\n\t\t\tcommit('APP_GET_WORDS', wordsData.data);\r\n\t\t}\r\n\r\n\t\tcommit('APP_STATUS', 'success');\r\n\t},\r\n\r\n\t/**\r\n\t * Function gets count words in group\r\n\t *\r\n\t * @param {object} [payload]\r\n\t * @param {number} [payload.group=0]\r\n\t * @param {number} [payload.wordsPerExampleSentenceLTE]\r\n\t * @param {number} [payload.wordsPerPage]\r\n\t * @example dispatch('APP_GET_WORDS', { page: 1, group: 1 }, { root: true })\r\n\t */\r\n\tasync APP_GET_COUNT_WORDS_IN_GROUP({\r\n\t\trootState, commit, dispatch,\r\n\t}, payload) {\r\n\t\tconst words = {\r\n\t\t\tgroup: 0,\r\n\t\t};\r\n\t\tif (payload && payload.hasOwnProperty('group')) words.group = payload.group;\r\n\t\tif (payload && payload.hasOwnProperty('wordsPerExampleSentenceLTE')) words.wordsPerExampleSentenceLTE = payload.wordsPerExampleSentenceLTE;\r\n\t\tif (payload && payload.hasOwnProperty('wordsPerExampleSentenceLTE') && payload.hasOwnProperty('wordsPerPage')) words.wordsPerPage = payload.wordsPerPage;\r\n\r\n\t\tcommit('APP_STATUS', 'loading');\r\n\r\n\t\tawait axios.get(\r\n\t\t\t`${rootState.app.server}/words/count?&group=${words.group}&wordsPerExampleSentenceLTE=${words.wordsPerExampleSentenceLTE || ''}&wordsPerPage=${words.wordsPerPage || ''}`,\r\n\t\t).then((wordsData) => {\r\n\t\t\tconsole.log('Get count words', wordsData.data);\r\n\t\t\tcommit('APP_GET_COUNT_WORDS_IN_GROUP', wordsData.data);\r\n\t\t\tcommit('APP_STATUS', 'success');\r\n\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tcommit('APP_STATUS', 'error');\r\n\t\t\t\tdispatch('ALERT', {\r\n\t\t\t\t\talert: true,\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tmessage: `${error.response.statusText}: ${error.response.data}`,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Function gets word\r\n\t *\r\n\t * @param {object} payload\r\n\t * @param {string} payload.wordId\r\n\t * @param {string} [payload.noAssets=true]\r\n\t * @example dispatch('APP_GET_WORDS', {payload.wordId}, { root: true })\r\n\t */\r\n\tasync APP_GET_WORD({\r\n\t\trootState, commit, dispatch,\r\n\t}, payload) {\r\n\t\tcommit('APP_STATUS', 'loading');\r\n\r\n\t\tawait axios.get(\r\n\t\t\t`${rootState.app.server}/words/${payload.wordId}?noAssets=${payload.noAssets || 'true'}`,\r\n\t\t).then((wordsData) => {\r\n\t\t\tconsole.log('Get word', wordsData.data);\r\n\t\t\tcommit('APP_GET_WORD', wordsData.data);\r\n\t\t\tcommit('APP_STATUS', 'success');\r\n\t\t}).catch((error) => {\r\n\t\t\tcommit('APP_STATUS', 'error');\r\n\t\t\tdispatch('ALERT', {\r\n\t\t\t\talert: true,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tmessage: `${error.response.statusText}: ${error.response.data}`,\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * This function creates / updates statistics for a word based on its ID\r\n\t *\r\n\t * @param {object} payload\r\n\t * @param {number} payload.wordId\r\n\t * @param {number} payload.wordStat\r\n\t * @param {number} [payload.method='post'] - 'post' <default, create>, 'put' <update>\r\n\t * @example dispatch('APP_SET_USER_WORD_STAT',\r\n\t *\t\t\t\t{ wordId: String, wordStat: {Object} }, { root: true })\r\n\t */\r\n\tasync APP_SET_USER_WORD_STAT({\r\n\t\trootState, commit, dispatch,\r\n\t}, payload) {\r\n\t\tcommit('APP_STATUS', 'loading');\r\n\r\n\t\tawait axios[payload.method || 'post'](\r\n\t\t\t`${rootState.app.server}/users/${rootState.user.profile.userId}/words/${payload.wordId}`,\r\n\t\t\tpayload.wordStat,\r\n\t\t).then((wordData) => {\r\n\t\t\tconsole.log(`${payload.method === 'put' ? 'Обновил' : 'Создал'} статистику по слову`, wordData.data);\r\n\t\t\tcommit('APP_SET_USER_WORD_STAT', wordData.data);\r\n\t\t\tcommit('APP_STATUS', 'success');\r\n\t\t}).catch((error) => {\r\n\t\t\tcommit('APP_STATUS', 'error');\r\n\t\t\tdispatch('ALERT', {\r\n\t\t\t\talert: true,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tmessage: `${error.response.statusText}: ${error.response.data}`,\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * The function gets statistics for a word via its ID or for all words saved on the user.\r\n\t *\r\n\t * @param {number} [wordId]\r\n\t * @example dispatch('APP_GET_USER_WORD_STAT', wordId: String || null, { root: true })\r\n\t */\r\n\tasync APP_GET_USER_WORD_STAT({\r\n\t\trootState, commit, dispatch,\r\n\t}, wordId) {\r\n\t\tcommit('APP_STATUS', 'loading');\r\n\r\n\t\tawait axios.get(\r\n\t\t\t`${rootState.app.server}/users/${rootState.user.profile.userId}/words/${wordId || ''}`,\r\n\t\t).then((wordData) => {\r\n\t\t\tconsole.log('Получил статистику по слову(-ам)', wordData.data);\r\n\t\t\tcommit('APP_GET_USER_WORD_STAT', wordData.data);\r\n\t\t\tcommit('APP_STATUS', 'success');\r\n\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tcommit('APP_STATUS', 'error');\r\n\t\t\t\tdispatch('ALERT', {\r\n\t\t\t\t\talert: true,\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tmessage: `${error.response.statusText}: ${error.response.data}`,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * The function deletes statistics for a word via its ID\r\n\t *\r\n\t * @param {number} wordId\r\n\t * @example dispatch('APP_DELETE_USER_WORD_STAT', wordId: String, { root: true })\r\n\t */\r\n\tasync APP_DELETE_USER_WORD_STAT({\r\n\t\trootState, commit, dispatch,\r\n\t}, wordId) {\r\n\t\tcommit('APP_STATUS', 'loading');\r\n\r\n\t\tconst res = await axios.delete(\r\n\t\t\t`${rootState.app.server}/users/${rootState.user.profile.userId}/words/${wordId}`,\r\n\t\t).catch((error) => {\r\n\t\t\tcommit('APP_STATUS', 'error');\r\n\t\t\tdispatch('ALERT', {\r\n\t\t\t\talert: true,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tmessage: `${error.response.statusText}: ${error.response.data}`,\r\n\t\t\t});\r\n\t\t});\r\n\t\tconsole.log(`Удалил статистику по слову с ID ${wordId}`, res);\r\n\t\tcommit('APP_DELETE_USER_WORD_STAT', wordId);\r\n\r\n\t\tcommit('APP_STATUS', 'success');\r\n\t},\r\n\r\n\t/**\r\n\t * This function gets all user aggregated words\r\n\t *\r\n\t * @param {object} payload\r\n\t * @param {number} [payload.group=0]\r\n\t * @param {number} [payload.wordsPerPage]\r\n\t * @param {number} payload.filter\r\n\t * @example dispatch('APP_GET_USER_WORDS_AGGREGATED',\r\n\t *\t\t\t\t{ filter: JSON.stringify({ userWord: null }), { root: true })\r\n\t */\r\n\tasync APP_GET_USER_WORDS_AGGREGATED({\r\n\t\trootState, commit, dispatch,\r\n\t}, payload) {\r\n\t\tcommit('APP_STATUS', 'loading');\r\n\t\tconst words = {\r\n\t\t\tgroup: 0,\r\n\t\t\tpage: '',\r\n\t\t\twordsPerPage: '',\r\n\t\t\tfilter: '',\r\n\t\t};\r\n\r\n\t\tif (payload && payload.hasOwnProperty('wordsPerPage')) words.wordsPerPage = payload.wordsPerPage;\r\n\t\tif (payload && payload.hasOwnProperty('group')) words.group = payload.group;\r\n\t\tif (payload && payload.hasOwnProperty('page')) words.page = payload.page;\r\n\t\tif (payload && payload.hasOwnProperty('filter')) words.filter = JSON.stringify(payload.filter);\r\n\r\n\t\tawait axios.get(\r\n\t\t\t`${rootState.app.server}/users/${rootState.user.profile.userId}/aggregatedWords?group=${words.group}&page=${words.page}&wordsPerPage=${words.wordsPerPage}&filter=${words.filter}`,\r\n\t\t).then((wordsData) => {\r\n\t\t\tcommit('APP_GET_WORDS', wordsData.data[0].paginatedResults);\r\n\t\t\tif (wordsData.data[0].paginatedResults.length > 0) {\r\n\t\t\t\tcommit('APP_GET_WORDS_COUNT', wordsData.data[0].totalCount[0].count);\r\n\t\t\t} else commit('APP_GET_WORDS_COUNT', 0);\r\n\t\t\tconsole.log('aggregatedWords', wordsData.data[0]);\r\n\r\n\t\t\tcommit('APP_STATUS', 'success');\r\n\t\t}).catch((error) => {\r\n\t\t\tcommit('APP_STATUS', 'error');\r\n\t\t\tdispatch('ALERT', {\r\n\t\t\t\talert: true,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tmessage: `${error.response.statusText}: ${error.response.data}`,\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * This function gets one user aggregated word\r\n\t *\r\n\t * @param {string} wordId\r\n\t * @example dispatch('APP_GET_USER_WORD_AGGREGATED', wordId, { root: true })\r\n\t */\r\n\tasync APP_GET_USER_WORD_AGGREGATED({\r\n\t\trootState, commit, dispatch,\r\n\t}, wordId) {\r\n\t\tcommit('APP_STATUS', 'loading');\r\n\r\n\t\tawait axios.get(\r\n\t\t\t`${rootState.app.server}/users/${rootState.user.profile.userId}/aggregatedWords/${wordId}`,\r\n\t\t).then((word) => {\r\n\t\t\tcommit('APP_GET_WORD', word.data[0]);\r\n\t\t\tconsole.log('aggregatedWord', word.data[0]);\r\n\r\n\t\t\tcommit('APP_STATUS', 'success');\r\n\t\t}).catch((error) => {\r\n\t\t\tcommit('APP_STATUS', 'error');\r\n\t\t\tdispatch('ALERT', {\r\n\t\t\t\talert: true,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tmessage: `${error.response.statusText}: ${error.response.data}`,\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Function for creating / updating and saving word statistics\r\n\t *\r\n\t * @param {object} payload\r\n\t * @param {object} payload.word\r\n\t * @param {boolean} payload.right\r\n\t * @param {boolean} [payload.offDate=false]\r\n\t * @example dispatch('APP_WORD_PROCESSING', { word, right }, { root: true })\r\n\t */\r\n\tasync APP_WORD_PROCESSING({\r\n\t\tstate, commit, dispatch,\r\n\t}, payload) {\r\n\t\tcommit('STATISTIC_WORD', payload.word);\r\n\t\tcommit('RIGHT_CHOICE_WORD', payload.right);\r\n\t\tif (!payload.offDate) commit('NEXT_TRAIN_TIME');\r\n\t\tawait dispatch('APP_SET_USER_WORD_STAT', {\r\n\t\t\tmethod: state.wordHasStat ? 'put' : 'post',\r\n\t\t\twordId: payload.word._id,\r\n\t\t\twordStat: state.wordStat,\r\n\t\t});\r\n\t},\r\n};\r\n\r\n/**\r\n * Instructions for working with mutations\r\n * link https://vuex.vuejs.org/guide/mutations.html\r\n */\r\nconst mutations = {\r\n\tEDIT_HTML: (state, payload) => {\r\n\t\tpayload.forEach((item) => {\r\n\t\t\tstate.html[item.one][item.key] = item.value;\r\n\t\t});\r\n\t},\r\n\tAPP_GET_WORDS: (state, words) => {\r\n\t\tstate.words = words;\r\n\t},\r\n\tAPP_GET_WORDS_COUNT: (state, count) => {\r\n\t\tstate.countWords = count;\r\n\t},\r\n\tAPP_GET_WORD: (state, word) => {\r\n\t\tstate.words = [];\r\n\t\tstate.words.push(word);\r\n\t\tstate.countWords = state.words.length;\r\n\t},\r\n\tAPP_GET_COUNT_WORDS_IN_GROUP: (state, data) => {\r\n\t\tstate.countWords = data.count;\r\n\t},\r\n\tAPP_GET_USER_WORD_STAT: (state, words) => {\r\n\t\tif (words.length > 1) {\r\n\t\t\tstate.wordsStat = words;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tstate.wordsStat.push(words);\r\n\t},\r\n\tAPP_SET_USER_WORD_STAT: (state, word) => {\r\n\t\tconst ind = state.wordsStat.indexOf(word.wordId);\r\n\t\tif (!ind === -1) return state.wordsStat.push(word);\r\n\t\treturn state.wordsStat.splice(ind, 1);\r\n\t},\r\n\tAPP_DELETE_USER_WORD_STAT: (state, wordId) => {\r\n\t\t// TODO: Что то тут не так, удаляет не то\r\n\t\tstate.wordsStat.splice(state.wordsStat.indexOf(wordId), 1);\r\n\t},\r\n\tAPP_STATUS: (state, status) => {\r\n\t\tif (status === 'loading' || status === 'success') {\r\n\t\t\tstate.status = status;\r\n\t\t} else state.status = 'error';\r\n\t},\r\n\tAPP_SHOW_SETTING: (state) => {\r\n\t\tstate.showSetting = !state.showSetting;\r\n\t},\r\n\tSHOW_SHORT_STATISTICS: (state) => {\r\n\t\tstate.showShortStatistics = !state.showShortStatistics;\r\n\t},\r\n\tSHOW_ALERT: (state) => {\r\n\t\tstate.showAlert = !state.showAlert;\r\n\t},\r\n\tSTATISTIC_WORD: (state, word) => {\r\n\t\tif (word.userWord && (word.userWord.optional || word.userWord.difficulty)) {\r\n\t\t\tstate.wordHasStat = true;\r\n\t\t\tconst { optional } = word.userWord;\r\n\t\t\tstate.wordStat.optional = {\r\n\t\t\t\tname: word.word,\r\n\t\t\t\tlearnGroup: optional.learnGroup || 1,\r\n\t\t\t\tisDelete: optional.isDelete || false,\r\n\t\t\t\tallRepeats: optional.allRepeats || 0,\r\n\t\t\t\tsuccessRepeats: optional.successRepeats || 0,\r\n\t\t\t\tpreviousTrain: optional.previousTrain || new Date(),\r\n\t\t\t\tnextTrain: optional.nextTrain || new Date(),\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstate.wordHasStat = false;\r\n\t\t\tstate.wordStat = {\r\n\t\t\t\toptional: {\r\n\t\t\t\t\tname: word.word,\r\n\t\t\t\t\tlearnGroup: 1,\r\n\t\t\t\t\tisDelete: false,\r\n\t\t\t\t\tallRepeats: 0,\r\n\t\t\t\t\tsuccessRepeats: 0,\r\n\t\t\t\t\tpreviousTrain: new Date(),\r\n\t\t\t\t\tnextTrain: new Date(),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tRIGHT_CHOICE_WORD: (state, right) => {\r\n\t\tconst minLearnLevel = 0;\r\n\t\tconst maxLearnLevel = 5;\r\n\t\tconst { optional } = state.wordStat;\r\n\t\tif (right) {\r\n\t\t\toptional.learnGroup = optional.learnGroup < maxLearnLevel\r\n\t\t\t\t? optional.learnGroup += 1\r\n\t\t\t\t: maxLearnLevel;\r\n\t\t\toptional.successRepeats += 1;\r\n\t\t} else {\r\n\t\t\toptional.learnGroup = optional.learnGroup > minLearnLevel\r\n\t\t\t\t? optional.learnGroup -= 1\r\n\t\t\t\t: minLearnLevel;\r\n\t\t}\r\n\t\toptional.allRepeats += 1;\r\n\t},\r\n\tNEXT_TRAIN_TIME: (state) => {\r\n\t\tconst { optional } = state.wordStat;\r\n\t\tconst breakInDays = [0, 1, 2, 7, 18];\r\n\t\tconst formDate = (dateD) => dateD.toJSON().replace(/T.+/, '');\r\n\t\tconst date = new Date();\r\n\t\toptional.previousTrain = formDate(date);\r\n\r\n\t\tswitch (optional.learnGroup) {\r\n\t\tcase 1:\r\n\t\t\tdate.setDate(date.getDate() + breakInDays[0]);\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tdate.setDate(date.getDate() + breakInDays[1]);\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tdate.setDate(date.getDate() + breakInDays[2]);\r\n\t\t\tbreak;\r\n\t\tcase 4:\r\n\t\t\tdate.setDate(date.getDate() + breakInDays[3]);\r\n\t\t\tbreak;\r\n\t\tcase 5:\r\n\t\t\tdate.setDate(date.getDate() + breakInDays[4]);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t}\r\n\t\toptional.nextTrain = formDate(date);\r\n\t},\r\n};\r\n/**\r\n * Instructions for working with getters\r\n * link https://vuex.vuejs.org/api/#getters\r\n */\r\nconst getters = {\r\n\tgetHtmlParameters: (state) => state.html,\r\n\tgetWords: (state) => state.words,\r\n\tgetCountWords: (state) => state.countWords,\r\n\tgetWordsStat: (state) => state.wordsStat,\r\n\tgetStatusLoadWithIcon: (state) => {\r\n\t\tconst { status } = state;\r\n\t\tconst loading = status === 'loading';\r\n\t\tconst icon = status === 'success' ? 'mdi-check-circle' : 'mdi-close-circle';\r\n\t\tconst message = status === 'success' ? \"It's okay\" : 'An error occurred';\r\n\r\n\t\treturn {\r\n\t\t\tstatus, loading, message, icon,\r\n\t\t};\r\n\t},\r\n\tgetServerUrl: (state) => state.server,\r\n\tgetUrlFiles: (state) => state.urlFiles,\r\n\tgetUrlImage: (state) => state.urlImage,\r\n\tshowShortStatistics: (state) => state.showShortStatistics,\r\n\tshowAlert: (state) => state.showAlert,\r\n\tshowSetting: (state) => state.showSetting,\r\n};\r\n\r\nconst state = {\r\n\tstatus: 'success',\r\n\tserver: 'https://afternoon-falls-25894.herokuapp.com',\r\n\t// urlFiles: 'https://kagafon-rslang-data.netlify.app/',\r\n\turlFiles: 'https://raw.githubusercontent.com/Dream-Team-42/rslang-data/master/',\r\n\turlImage: './assets/default-english.jpg',\r\n\thtml: {\r\n\t\tmain: {\r\n\t\t\tdrawer: true,\r\n\t\t\tbackground: '',\r\n\t\t\tbreadcrumbs: true,\r\n\t\t},\r\n\t\tapp: {\r\n\t\t\tbackground: 'grey lighten-5',\r\n\t\t\tcolorWhite: false,\r\n\t\t},\r\n\t},\r\n\r\n\twords: [],\r\n\tcountWords: 0,\r\n\twordsStat: [],\r\n\twordStat: {\r\n\t\toptional: {\r\n\t\t\tname: '',\r\n\t\t\tlearnGroup: 1,\r\n\t\t\tisDelete: false,\r\n\t\t\tallRepeats: 0,\r\n\t\t\tsuccessRepeats: 0,\r\n\t\t\tpreviousTrain: '',\r\n\t\t\tnextTrain: '',\r\n\t\t},\r\n\t},\r\n\twordHasStat: false,\r\n\r\n\tshowShortStatistics: false,\r\n\tshowAlert: false,\r\n\tshowSetting: false,\r\n};\r\n\r\nexport default {\r\n\t// namespaced false. To make it available throughout the project without special pointers.\r\n\tnamespaced: false,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations,\r\n};\r\n"]}]}